// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int         @id @default(autoincrement())
  email     String      @unique
  password  String?
  name      String?
  phone     String?
  status    Boolean     @default(true)
  type      String      @default("USER")
  posts     Post[]
  createdAt DateTime    @default(now())
  updatedAt DateTime?   @updatedAt
  Comment   Comment[]
  Reactions Reactions[]
}

model Post {
  id         Int         @id @default(autoincrement())
  title      String
  summary    String
  content    String
  nameImage  String?
  pathImage  String?
  approves   Boolean     @default(false)
  owner      User        @relation(fields: [ownerId], references: [id])
  ownerId    Int
  statuspost StatusPost  @relation(fields: [statusId], references: [id])
  statusId   Int
  createdAt  DateTime    @default(now())
  updatedAt  DateTime?   @updatedAt
  Comment    Comment[]
  Reactions  Reactions[]
}

model StatusPost {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  posts       Post[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
}

model Comment {
  postId    Int
  ownerId   Int
  content   String
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  owner  User @relation(fields: [ownerId], references: [id])
  postid Post @relation(fields: [postId], references: [id])

  @@id([postId, ownerId])
}

model Reactions {
  postId       Int
  ownerId      Int
  reactionType Int
  createdAt    DateTime  @default(now())
  updatedAt    DateTime? @updatedAt

  owner         User          @relation(fields: [ownerId], references: [id])
  postid        Post          @relation(fields: [postId], references: [id])
  reactiontypes ReactionTypes @relation(fields: [reactionType], references: [id])

  @@id([postId, ownerId])
}

model ReactionTypes {
  id          Int         @id @default(autoincrement())
  name        String
  description String
  Reactions   Reactions[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime?   @updatedAt
}
